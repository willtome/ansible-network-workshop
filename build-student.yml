---
- name: Include the template file
  include_vars:
    file: "{{ workshop_template }}"

- include_role:
    name: cloud-networks
  vars:
    - cloud_vpc_name: "{{ vpc_item.name }}"
    - cloud_vpc_data: "{{ vpc_item }}"
    - cloud_network_data: "{{ vpc_item.networks }}"
  with_items: "{{ vpc_list | default([]) }}"
  loop_control:
    loop_var: vpc_item
  tags:
    - cloud-networks

- include_role:
    name: cloud-keypairs
  vars:
    - cloud_vpc_name: "{{ vpc_item.name }}"
    - cloud_vpc_data: "{{ vpc_item }}"
    - cloud_keypair_data: "{{ ssh_keys }}"
  with_items: "{{ vpc_list | default([]) }}"
  loop_control:
    loop_var: vpc_item
  tags:
    - cloud-keypairs

- include_role:
    name: cloud-security-groups
  vars:
    - cloud_vpc_name: "{{ vpc_item.name }}"
    - cloud_vpc_data: "{{ vpc_item }}"
    - cloud_security_group_data: "{{ acl_dict }}"
  with_items: "{{ vpc_list | default([]) }}"
  loop_control:
    loop_var: vpc_item
  tags:
    - cloud-security-groups

- include_role:
    name: cloud-instances
  vars:
    - cloud_vpc_name: "{{ vpc_item.name }}"
    - cloud_vpc_data: "{{ vpc_item }}"
    - cloud_instance_data: "{{ vpc_item.instances }}"
    - cloud_dns_provider: route53
    - cloud_dns_zone: "{{ workshop_dns_zone }}"
    - cloud_dns_domain: "{{ vpc_item.project }}.{{ workshop_dns_zone }}"
  with_items: "{{ vpc_list | default([]) }}"
  loop_control:
    loop_var: vpc_item
  tags:
    - cloud-instances

- include_role:
    name: cloud-routes
  vars:
    - cloud_vpc_name: "{{ vpc_item.name }}"
    - cloud_vpc_data: "{{ vpc_item }}"
    - cloud_route_data: "{{ vpc_item.routes }}"
  with_items: "{{ vpc_list | default([]) }}"
  when: vpc_item.routes is defined
  loop_control:
    loop_var: vpc_item
  tags:
    - cloud-routes

- include_role:
    name: cloud-vnfs
  vars:
    - cloud_vpc_name: "{{ vpc_item.name }}"
    - cloud_vpc_data: "{{ vpc_item }}"
    - cloud_network_data: "{{ vpc_item.networks }}"
  with_items: "{{ vpc_list | default([]) }}"
  loop_control:
    loop_var: vpc_item
  tags:
    - cloud-vnfs

- name: Create the workshop inventory file groups
  lineinfile:
    path: "./{{ workshop_name }}-instances.txt"
    line: "[{{ instance_item.1.tags.group }}]"
    create: yes
  with_subelements:
    - "{{ vpc_list | default([]) }}"
    - instances
  loop_control:
    loop_var: instance_item
  tags:
    - inventory-files

- name: Create the workshop inventory file
  lineinfile:
    path: "./{{ workshop_name }}-instances.txt"
    line: "{{ instance_item.1.name }}.{{ workshop_name }}.{{ workshop_dns_zone }} ansible_host={{ cloud_instance_dict[instance_item.1.name].ip }} ansible_ssh_user={{ cloud_user }} ansible_network_os={{ instance_item.1.tags.network_os | default ('none')}} student_name={{ student_name }} private_ip={{ cloud_instance_dict[instance_item.1.name].private_ip }} workshop_name={{ workshop_name }}"
    insertafter: "\\[{{ instance_item.1.tags.group }}\\]"
  with_subelements:
    - "{{ vpc_list | default([]) }}"
    - instances
  loop_control:
    loop_var: instance_item
  tags:
    - inventory-files

- name: Create human readable control host list
  lineinfile:
    path: "./{{ workshop_name }}-public.txt"
    line: "{{ student_name }}: {{ cloud_user }}@{{ instance_item.1.name }}.{{ workshop_name }}.{{ workshop_dns_zone }} Public IP Address={{ cloud_instance_dict[instance_item.1.name].ip }}"
    create: yes
  when: '"control" in instance_item.1.name'
  with_subelements:
    - "{{ vpc_list | default([]) }}"
    - instances
  loop_control:
    loop_var: instance_item
  tags:
    - inventory-files

- name: Create student inventory files groups
  lineinfile:
    path: "./{{ student_name }}-instances.txt"
    line: "[{{ instance_item.1.tags.group }}]"
    create: yes
  with_subelements:
    - "{{ vpc_list | default([]) }}"
    - instances
  loop_control:
    loop_var: instance_item
  tags:
    - inventory-files

- name: Create student inventory files
  lineinfile:
    path: "./{{ student_name }}-instances.txt"
    line: "{{ instance_item.1.name.split('-')[1] }} ansible_host={{ cloud_instance_dict[instance_item.1.name].ip }} private_ip={{ cloud_instance_dict[instance_item.1.name].private_ip }} ansible_ssh_user={{ cloud_user }} ansible_network_os={{ instance_item.1.tags.network_os | default ('none')}}"
    insertafter: "\\[{{ instance_item.1.tags.group }}\\]"
  with_subelements:
    - "{{ vpc_list | default([]) }}"
    - instances
  loop_control:
    loop_var: instance_item
  tags:
    - inventory-files

- name: Create student etc hosts file (local host entries)
  blockinfile:
    path: "./{{ student_name }}-hosts.txt"
    create: yes
    block: |
      127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4
      localhost localhost.localdomain localhost6 localhost6.localdomain6

- name: Create student etc hosts file
  lineinfile:
    path: "./{{ student_name }}-hosts.txt"
    line: "{{ cloud_instance_dict[instance_item.1.name].ip }} {{ instance_item.1.name.split('-')[1] }}"
  with_subelements:
    - "{{ vpc_list | default([]) }}"
    - instances
  loop_control:
    loop_var: instance_item
